#  Copyright (C) 2022 National Land Survey of Finland
#  (https://www.maanmittauslaitos.fi/en).
#
#
#  This file is part of quality-service.
#
#  quality-service is free software: you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as published
#  by the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  quality-service is distributed in the hope that it will be
#  useful, but WITHOUT ANY WARRANTY; without even the implied warranty
#  of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with quality-service. If not, see <https://www.gnu.org/licenses/>.

quality_rules:
-   category: lake_part
    descriptions:
    -   description: Geometrian täytyy olla validi
        lang: fi
    -   description: sv_Geometrian täytyy olla validi
        lang: sv
    -   description: Geometry should be valid
        lang: en
    priority: fatal
    rule_id: valid_geometry
    sql: |-
        SELECT s.id AS source_id, (SELECT ST_Force2D(ST_SetSRID(location, 3903)) FROM ST_IsValidDetail(s.geom)) AS geom, null AS target_id
        FROM feature_type.lake_part s
        WHERE
          :source_id_filter
          AND (NOT ST_IsValid(s.geom) OR NOT ST_IsSimple(s.geom))
    type: geometry
-   category: lake_part
    descriptions:
    -   description: Kohteiden pitää olla erillään
        lang: fi
    -   description: sv_Kohteiden pitää olla erillään
        lang: sv
    -   description: Features should be disjoint
        lang: en
    priority: fatal
    rule_id: no_intersect
    sql: |-
        SELECT s.id AS source_id, (ST_Dump(ST_Force2D(ST_Intersection(ST_MakeValid(s.geom), ST_MakeValid(t.geom))))).geom, t.id AS target_id FROM feature_type.lake_part s JOIN feature_type.sea_part t ON
          t.id<>s.id AND ST_Intersects(ST_MakeValid(s.geom), ST_MakeValid(t.geom))
        WHERE
          :source_id_filter
    target: feature_type.sea_part
    type: topology
-   attribute_name: lake_part_id
    category: lake_part
    descriptions:
    -   description: Ominaisuustiedon lake_part_id arvon täytyy olla välillä 2000000-2999999
        lang: fi
    -   description: sv_Ominaisuustiedon lake_part_id arvon täytyy olla välillä 2000000-2999999
        lang: sv
    -   description: Attribute lake_part_id should be in range 2000000-2999999
        lang: en
    priority: warning
    qgis_expression: '"lake_part_id" >= 2000000 and "lake_part_id" <= 2999999'
    rule_id: attribute_in_range
    sql: |-
        SELECT s.id AS source_id, null AS geom, null AS target_id FROM feature_type.lake_part s WHERE
          :source_id_filter
          AND NOT s.lake_part_id BETWEEN 2000000 AND 2999999
    type: attribute
-   category: cultivated_land
    descriptions:
    -   description: Geometrian täytyy olla validi
        lang: fi
    -   description: sv_Geometrian täytyy olla validi
        lang: sv
    -   description: Geometry should be valid
        lang: en
    priority: fatal
    rule_id: valid_geometry
    sql: |-
        SELECT s.id AS source_id, (SELECT ST_Force2D(ST_SetSRID(location, 3903)) FROM ST_IsValidDetail(s.geom)) AS geom, null AS target_id
        FROM feature_type.cultivated_land s
        WHERE
          :source_id_filter
          AND (NOT ST_IsValid(s.geom) OR NOT ST_IsSimple(s.geom))
    type: geometry
-   attribute_name: cultivated_land_class_id
    category: cultivated_land
    descriptions:
    -   description: Kohteen täytyy olla irrallaan viereistä kohteesta, jos ominaisuustieto
            cultivated_land_class_id on sama
        lang: fi
    -   description: sv_Kohteen täytyy olla irrallaan viereistä kohteesta, jos ominaisuustieto
            cultivated_land_class_id on sama
        lang: sv
    -   description: Features should be disjoint if attribute cultivated_land_class_id
            matches
        lang: en
    priority: fatal
    rule_id: no_touch_if_same_attribute
    sql: |-
        SELECT s.id AS source_id, (ST_Dump(ST_Force2D(ST_Intersection(ST_MakeValid(s.geom), ST_MakeValid(t.geom))))).geom, t.id AS target_id FROM feature_type.cultivated_land s JOIN feature_type.cultivated_land t ON
          t.id<>s.id AND s.cultivated_land_class_id=t.cultivated_land_class_id AND ST_Intersects(ST_MakeValid(s.geom), ST_MakeValid(t.geom))
        WHERE
          :source_id_filter
    target: feature_type.cultivated_land
    type: topology
-   category: fence
    descriptions:
    -   description: Geometrian täytyy olla validi
        lang: fi
    -   description: sv_Geometrian täytyy olla validi
        lang: sv
    -   description: Geometry should be valid
        lang: en
    priority: fatal
    rule_id: valid_geometry
    sql: |-
        SELECT s.id AS source_id, (SELECT ST_Force2D(ST_SetSRID(location, 3903)) FROM ST_IsValidDetail(s.geom)) AS geom, null AS target_id
        FROM feature_type.fence s
        WHERE
          :source_id_filter
          AND (NOT ST_IsValid(s.geom) OR NOT ST_IsSimple(s.geom))
    type: geometry
-   attribute_name: height
    category: waterfall
    descriptions:
    -   description: Ominaisuustiedon height arvon täytyy olla välillä 1-150
        lang: fi
    -   description: sv_Ominaisuustiedon height arvon täytyy olla välillä 1-150
        lang: sv
    -   description: Attribute height should be in range 1-150
        lang: en
    priority: fatal
    qgis_expression: '"height" >= 1 and "height" <= 150'
    rule_id: attribute_in_range
    sql: |-
        SELECT s.id AS source_id, null AS geom, null AS target_id FROM feature_type.waterfall s WHERE
          :source_id_filter
          AND NOT s.height BETWEEN 1 AND 150
    type: attribute
-   category: boulder_in_water
    descriptions:
    -   description: Kohteen täytyy olla toisen kohteen sisällä
        lang: fi
    -   description: sv_Kohteen täytyy olla toisen kohteen sisällä
        lang: sv
    -   description: Feature should be contained in another feature
        lang: en
    priority: warning
    check_if_changed:
    -   sea_part
    -   lake_part
    -   watercourse_part_area
    rule_id: is_contained
    sql: |-
        SELECT s.id AS source_id, ST_Force2D(s.geom) AS geom, null AS target_id FROM feature_type.boulder_in_water s WHERE
          :source_id_filter
          AND NOT EXISTS (
          SELECT 1 FROM feature_type.sea_part t WHERE t.id<>s.id AND ST_ContainsProperly(ST_MakeValid(t.geom), ST_MakeValid(s.geom))
             UNION SELECT 1 FROM feature_type.lake_part t WHERE t.id<>s.id AND ST_ContainsProperly(ST_MakeValid(t.geom), ST_MakeValid(s.geom))
             UNION SELECT 1 FROM feature_type.watercourse_part_area t WHERE t.id<>s.id AND ST_ContainsProperly(ST_MakeValid(t.geom), ST_MakeValid(s.geom))
            )
    type: topology
